import json

import aiogram.utils.exceptions
import requests
from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Command, ContentTypeFilter, Text
import logging
import keyboard as kb

with open(r"–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É token_file.json –Ω–∞ –≤–∞—à–µ–º –ø–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä: D:\Projects\Film\token_file.json") as file:
    data = json.load(file)

BOT_TOKEN = data['BOT_TOKEN']

TOKEN_KINO = data['TOKEN_KINO']

url = 'https://api.kinopoisk.dev/'

headers = {'accept': 'application/json', 'X-API-KEY': TOKEN_KINO}


bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands='start')
async def start_func(msg: types.Message):
    await bot.send_message(msg.from_user.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.',
                           reply_markup=kb.main_bar())

@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥‚¨ÖÔ∏è'))
async def back_func(msg: types.Message):
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–∞–¥',
                           reply_markup=kb.main_bar())

@dp.message_handler(Text(equals='–í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞'))
async def choose_genre(msg: types.Message):
    await bot.send_message(msg.from_user.id, '–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∂–∞–Ω—Ä!', reply_markup=kb.genres())

@dp.message_handler(Text(equals='–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–∏–Ω–æüé•'))
async def get_random_movie(msg: types.Message):

    r = requests.get(url + 'v1.4/movie/random', headers=headers)
    if r.status_code == 200:
        title = r.json()['name']
        description = r.json()['description']
        year = r.json()['year']
        poster = r.json()['poster']['url']


        await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {title}')
        await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {year}')
        await bot.send_photo(msg.from_user.id, photo=poster, caption=description)


@dp.message_handler(Text(equals='–°–µ—Ä–∏–∞–ªüéû'))
async def get_random_tvseries(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
                "type": ['tv-series', '!anime', '!movie'],
                "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])

@dp.message_handler(text='–î—Ä–∞–º–∞üò≠')
async def choose_genre_drama(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
            "genres.name": ['–¥—Ä–∞–º–∞'],
            "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])

@dp.message_handler(Text(equals='–£–∂–∞—Å—ã‚ò†Ô∏è'))
async def choose_genre_horrors(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
            "genres.name": ['—É–∂–∞—Å—ã'],
            "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])


@dp.message_handler(Text(equals='–¢—Ä–∏–ª–ª–µ—Äü´£'))
async def choose_genre_thriller(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
            "genres.name": ['—Ç—Ä–∏–ª–ª–µ—Ä'],
            "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])

@dp.message_handler(Text(equals='–ë–æ–µ–≤–∏–∫ü§Ø'))
async def choose_genre_action(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
            "genres.name": ['–±–æ–µ–≤–∏–∫'],
            "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])

@dp.message_handler(Text(equals='–ö–æ–º–µ–¥–∏—èü§£'))
async def choose_genre_comedy(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
            "genres.name": ['–∫–æ–º–µ–¥–∏—è'],
            "year": '1990-2023'
        },
        headers=headers
    )
    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])


@dp.message_handler(Text(equals='üÖ∞Ô∏è–Ω–∏–º–µ'))
async def get_random_anime(msg: types.Message):
    response = requests.get(
        url='https://api.kinopoisk.dev/v1.4/movie/random',
        params={
                "type": ['!tv-series', 'anime', '!animated-series', '!cartoon', '!movie'],
                "year": '2018-2023'
        },
        headers=headers
    )

    movies = response.json()
    await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["name"]}')
    await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["year"]}')
    await bot.send_photo(msg.from_user.id, photo=movies['poster']['url'], caption=movies["description"])


@dp.message_handler()
async def echo_func(msg: types.Message):
    query = msg.text
    params = {'query':  query}
    response = requests.get(
        'https://api.kinopoisk.dev/v1.4/movie/search',
        headers=headers,
        params=params
    )
    if response.status_code == 200:
        movies = response.json()
        await bot.send_message(msg.from_user.id, f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movies["docs"][0]["name"]}')
        await bot.send_message(msg.from_user.id, f'–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {movies["docs"][0]["year"]}')
        await bot.send_photo(msg.from_user.id, photo=movies['docs'][0]['poster']['url'], caption=movies['docs'][0]['description'], reply_markup=kb.add_list())

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
